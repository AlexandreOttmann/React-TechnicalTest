{"version":3,"file":"Button.stories.b27edecd.js","sources":["../../client/src/components/Button/types.ts","../../client/src/components/Button/Button.tsx"],"sourcesContent":["\nexport enum ButtonVariant {\n  Grey = 'grey',\n  Blue = 'blue',\n  Green = 'green',\n  Orange = 'orange',\n  Red = 'red',\n}\n\nexport interface ButtonProps {\n  variant?: ButtonVariant;\n  disabled?: boolean;\n  onClick?: () => void;\n  children?: React.ReactNode;\n}","import styled, { DefaultTheme, CSSObject, ThemedStyledProps } from 'styled-components';\nimport { ButtonProps, ButtonVariant } from './types';\n\nconst getButtonColors = ({\n  theme,\n  variant = ButtonVariant.Grey,\n  disabled = false,\n  onClick,\n} : ThemedStyledProps<ButtonProps, DefaultTheme>) => {\n  const styles: CSSObject = {\n    'background-color': theme.colors[`${variant}-300`],\n    'color': theme.colors[`${variant}-700`],\n  }\n\n  if (disabled || !onClick) {\n    return styles\n  }\n\n  return {\n    ...styles,\n    '&:hover': {\n      'background-color': theme.colors[`${variant}-400`],\n    },\n    '&:active': {\n      'color': theme.colors[`${variant}-800`],\n    }\n  }\n}\n\nconst ButtonEl = styled.button<ButtonProps>`\ndisplay: inline-flex;\nalign-items: center;\ngap: ${({ theme }) => theme.spacings['space-4']};\npadding: ${({ theme }) => theme.spacings['space-6']} ${({ theme }) => theme.spacings['space-12']};\nborder: none;\nborder-radius: ${({ theme }) => theme.border.radius['radius-8']};\nfont-size: ${({ theme }) => theme.text.sizes['font-15']};\ncursor: ${({ onClick, disabled }) => (disabled || !onClick) ? 'default' : 'pointer'};\npointer-events: ${({ onClick, disabled }) => (disabled || !onClick) ? 'none' : 'initial'};\nopacity: ${({ disabled }) => disabled ? 0.7 : 1};\n${(props) => ({\n  ...getButtonColors(props)\n})}\nuser-select: none;\n`\n\nconst Button = ({\n  children,\n  variant,\n  disabled,\n  onClick\n}: ButtonProps) => (\n  <ButtonEl\n    variant={variant}\n    disabled={disabled}\n    onClick={onClick}>\n    {children}\n  </ButtonEl>\n)\n\nexport default Button;"],"names":["ButtonVariant","getButtonColors","__name","theme","Grey","onClick","styles","variant","disabled","ButtonEl","styled","button","props","Button","children","_jsx","ButtonComponent"],"mappings":"iOACY,IAAAA,GAAAA,IACVA,EAAA,KAAO,OACPA,EAAA,KAAO,OACPA,EAAA,MAAQ,QACRA,EAAA,OAAS,SACTA,EAAA,IAAM,MALIA,IAAAA,GAAA,CAAA,CAAA,ECEZ,MAAAC,EAAAC,EAAA,CAAA,CAAyB,MAAAC,EACvBA,QAAAA,EAAAA,EAAAA,KACwBC,SAAAA,EAAAA,GACb,QAAAC,CAEkC,IAAA,CAC7C,MAAAC,EAAA,CAA0B,mBAAAH,EAAA,OAAA,GAAAI,SACYA,MAAAA,EAAAA,OAAAA,GAAAA,QACXA,EAG3B,OAAAC,GAAA,CAAAH,EACEC,EAGF,CAAO,GAAAA,EACFA,UAAAA,CACQ,mBAAAH,EAAA,OAAA,GAAAI,QAC2BA,EACtC,WAAA,CACY,MAAAJ,EAAA,OAAA,GAAAI,QACeA,CAC3B,CAEJ,EAxBA,mBA0BAE,EAAAC,EAAA;AAAA;AAAA;AAAA,OAAwBC,CAAAA,CAGhB,MAAAR,CAAQ,IAAAA,EAAA,SAAA;AAAA,WAAqB,CAAA,CACzB,MAAAA,CAAQ,IAAAA,EAAA,SAAA,cAAA,CAAA,CAAoC,MAAAA,CAAQ,IAAAA,EAAA,SAAA;AAAA;AAAA,iBAAqB,CAAA,CAEnE,MAAAA,CAAQ,IAAAA,EAAA,OAAA,OAAA;AAAA,aAA0B,CAAA,CACtC,MAAAA,CAAQ,IAAAA,EAAA,KAAA,MAAA;AAAA,UAAuB,CAAA,CAClC,QAAAE,EAAEA,SAAAA,CAAkB,IAAAG,GAAA,CAAAH,EAAA,UAAA;AAAA,kBAA2C,CAAA,CACvD,QAAAA,EAAEA,SAAAA,CAAkB,IAAAG,GAAA,CAAAH,EAAA,OAAA;AAAA,WAAwC,CAAA,CACnE,SAAAG,CAAW,IAAAA,EAAA,GAAA;AAAA,EAAuBI,IAAA,CAChC,GAAAX,EAAAW,CAAA,CAEd;AAAA;AAAA,EAIAC,EAAAX,EAAA,CAAA,CAAgB,SAAAY,EACdA,QAAAA,EACAP,SAAAA,EACAC,QAAAA,CAEW,IAAAO,EAAAN,EAAA,CACF,QAAAF,EACP,SAAAC,EACA,QAAAH,EACA,SAAAS,CACS,CAAA,EAVb,YAcAE,EAAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}